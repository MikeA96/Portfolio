{"ast":null,"code":"import _jsx from \"@babel/runtime/helpers/jsx\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from './components/home/home';\nimport About from './components/about/about';\nimport Contact from './components/contact/contact';\nimport Work from './components/work/work';\n\nvar _ref = /*#__PURE__*/_jsx(BrowserRouter, {}, void 0, /*#__PURE__*/_jsx(Switch, {}, void 0, /*#__PURE__*/_jsx(Route, {\n  path: \"/\",\n  exact: true,\n  component: Home\n}), /*#__PURE__*/_jsx(Route, {\n  path: \"/about\",\n  exact: true,\n  component: About\n}), /*#__PURE__*/_jsx(Route, {\n  path: \"/contact\",\n  exact: true,\n  component: Contact\n}), /*#__PURE__*/_jsx(Route, {\n  path: \"/work\",\n  exact: true,\n  component: Work\n})));\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _ref;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":null,"metadata":{},"sourceType":"module"}